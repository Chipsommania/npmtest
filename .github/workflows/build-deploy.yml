name: Build and Deploy Packages

on:
  push:
    paths:
      - 'packages/*/**'

jobs:
  detect-packages-and-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Get list of changed packages
      id: get-changes
      run: |
        # Check if HEAD^ is a valid revision, otherwise fallback to empty tree
        if git rev-parse HEAD^ >/dev/null 2>&1; then
          CHANGED_PACKAGES=$(git diff --name-only HEAD^ HEAD -- packages | grep -o 'packages/[^/]*' | sort | uniq | sed 's/packages\///' | uniq)
        else
          CHANGED_PACKAGES=$(git diff --name-only $(git hash-object -t tree /dev/null) HEAD -- packages | grep -o 'packages/[^/]*' | sort | uniq | sed 's/packages\///' | uniq)
        fi
        echo "Changed packages: $CHANGED_PACKAGES"
        # Convert space-separated package names to JSON array
        CHANGED_PACKAGES_JSON=$(echo "$CHANGED_PACKAGES" | jq -R -s -c 'split("\n") | map(select(length > 0))')
        echo "CHANGED_PACKAGES_JSON=$CHANGED_PACKAGES_JSON" >> $GITHUB_ENV
        echo "::set-output name=packages::$CHANGED_PACKAGES_JSON"
        echo "Packages JSON: $CHANGED_PACKAGES_JSON"

    - name: Print changed packages
      run: echo $CHANGED_PACKAGES

    - name: Build and Publish npmone if changed
      if: contains(steps.get-changes.outputs.packages, 'npmone')
      run: |
        cd packages/npmone
        npm install
        npm run build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        npx semantic-release

    - name: Build and Publish npmtwo if changed
      if: contains(steps.get-changes.outputs.packages, 'npmtwo')
      run: |
        cd packages/npmtwo
        npm install
        npm run build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        npx semantic-release

    - name: Build and Publish npmthree if changed
      if: contains(steps.get-changes.outputs.packages, 'npmthree')
      run: |
        cd packages/npmthree
        npm install
        npm run build
        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        npx semantic-release
