name: Publish All Packages

on:
  push:
    branches:
      - main

permissions:
  contents: write
  deployments: write  # Add this to give deployment permissions

jobs:
  wait_30_seconds:
    runs-on: ubuntu-latest
    environment: development
    outputs:
      deployment_id: ${{ steps.get_deployment_id.outputs.deployment_id }}
    steps:
      - name: Wait for 30 seconds
        run: sleep 30

      - name: Get Deployment ID
        id: get_deployment_id
        run: |
          deployment_id=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/deployments | jq -r '.[0].id')
          echo "::set-output name=deployment_id::$deployment_id"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-publish:
    runs-on: ubuntu-latest
    needs: wait_30_seconds
    env:
      DEPLOYMENT_ID: ${{ needs.wait_30_seconds.outputs.deployment_id }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Reset changes
        run: git reset --hard

      - name: Set npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Add scope to package names
        run: node add-scope.js

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add packages/**/package.json
          git commit -m "chore: add scope to package names" || echo "No changes to commit"

      - name: Build packages
        run: npx lerna run build

      - name: Publish packages
        run: npx lerna publish from-package --yes --registry https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update_deployment_status:
    runs-on: ubuntu-latest
    needs: build-and-publish
    if: ${{ always() }}
    steps:
      - name: Update GitHub Deployment Status
        uses: actions/github-script@v6
        with:
          script: |
            const status = '${{ job.status }}';
            const deployment_id = '${{ needs.build-and-publish.env.DEPLOYMENT_ID }}';
            if (!deployment_id) {
              throw new Error('Deployment ID is missing');
            }
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: deployment_id,
              state: status === 'success' ? 'success' : 'failure',
              log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              description: status === 'success' ? 'Deployment succeeded' : 'Deployment failed',
              environment: 'development'
            });
