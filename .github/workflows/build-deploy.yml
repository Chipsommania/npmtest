name: Publish All Packages

on:
  push:
    branches:
      - main

env:
  DEPLOYMENT_ENV: development

jobs:
  wait_30_seconds:
    runs-on: ubuntu-latest
    steps:
      - name: Exit successfully
        run: exit 0

  build-and-publish:
    runs-on: ubuntu-latest
    needs: wait_30_seconds

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Reset changes
        run: git reset --hard

      - name: Set npm auth token
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Add scope to package names
        run: node add-scope.js

      - name: Commit changes
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add packages/**/package.json
          git commit -m "chore: add scope to package names" || echo "No changes to commit"

      - name: Build packages
        run: npx lerna run build

      - name: Publish packages
        run: npx lerna publish from-package --yes --registry https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set deployment status to success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            const github = require('@actions/github');
            const { context } = github;
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'success',
              environment: process.env.DEPLOYMENT_ENV,
              log_url: context.run_id,
              description: 'Deployment finished successfully.',
              auto_inactive: true,
            });

      - name: Set deployment status to failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const github = require('@actions/github');
            const { context } = github;
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: context.payload.deployment.id,
              state: 'failure',
              environment: process.env.DEPLOYMENT_ENV,
              log_url: context.run_id,
              description: 'Deployment failed.',
              auto_inactive: true,
            });
