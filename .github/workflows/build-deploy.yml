name: Publish Packages

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: List packages
      id: list-packages
      run: |
        node list-packages.js > packages.txt
        echo "PACKAGES=$(cat packages.txt)" >> $GITHUB_ENV
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Set matrix for build
      id: set-matrix
      run: |
        echo "matrix=$(jq -n --arg packages "${{ env.PACKAGES }}" '{"include": ($packages | fromjson | map({"package": .}))}')" > matrix.json
        cat matrix.json
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Build and Publish
      strategy:
        matrix: ${{ fromJson(steps.set-matrix.outputs.matrix) }}
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm install

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Get changed files
        id: changes
        run: |
          echo "CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)" >> $GITHUB_ENV
          echo "Changed files: ${{ env.CHANGED_FILES }}"

      - name: Build and Publish
        if: contains(env.CHANGED_FILES, 'packages/${{ matrix.package }}/')
        run: |
          cd packages/${{ matrix.package }}
          npm version $(jq -r .version package.json) --no-git-tag-version
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
